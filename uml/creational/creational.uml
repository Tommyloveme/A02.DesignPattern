@startuml

' 枚举
enum Direction {
    North
    South
    East
    West
}

interface MapSite {
    +{abstract} std::shared_ptr<MapSite> Enter()
}

class Room {
    +std::shared_ptr<MapSite> Enter()
    +SetSide(Direction, MapSite)
    +GetSide(Direction)
    ..
    -map<Direction, std::shared_ptr<MapSite>> m_sides
}

class Wall {
    +std::shared_ptr<MapSite> Enter()
    ..
    -std::shared_ptr<MapSite> m_room
}

'note left of Wall::Enter()
'返回当前Room
'end note

class Door {
    +std::shared_ptr<MapSite> Enter()
    +IsOpen()
}

'note left of Door::Enter()
'返回下一个Room
'end note

class Maze {
    +CreateMaze(length, width)
    -AddRoom(roomNo, Room)
    ..
    -m_curRoom
}

class MazeGame {
    +CreateMaze(length, width)
    +GameStart()
    +GetStartPos()
    +Enter(Direction)
    -Initiation()
    -GetCurPos()
    -ShowMaze()
    -IsGameEnd()
    ..
    -m_maze
    -m_curPos
    -m_startPos
    -m_endPos
}

MapSite <|.. Room
MapSite <|.. Wall
MapSite <|.. Door
Maze "1" o-- "n..." Room : 包含
MazeGame --> Maze

'hide methods
'hide members
@enduml